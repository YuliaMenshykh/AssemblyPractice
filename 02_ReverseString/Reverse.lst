     1                                  section .data
     2                                  
     3 00000000 48656C6C6F30                originalStr db 'Hello', '0'   
     4                                      strLength equ $ - originalStr -1   
     5                                      
     6                                  section .bss
     7                                  
     8 00000000 <res F0h>                   reversedStr times strLength resb '0'
     9                                  
    10                                  section .text
    11                                      global _start
    12                                  
    13                                  _start:
    14                                  
    15 00000000 488D3425[00000000]          lea rsi, [originalStr] ;start of originalStr
    16 00000008 488D3C25[00000000]          lea rdi, [reversedStr] ;start of reversedStr
    17 00000010 B905000000                  mov rcx, strLength              
    18                                      
    19                                      ; Avoid /o
    20 00000015 4801CE                      add rsi, rcx                   
    21 00000018 48FFCE                  	dec rsi
    22                                  	
    23                                  reverseLoop:
    24 0000001B 8A06                        mov al, [rsi]                  ; Load from originalStr into AL
    25 0000001D 8807                        mov [rdi], al                  
    26 0000001F 48FFCE                      dec rsi                        
    27 00000022 48FFC7                      inc rdi                        
    28 00000025 E2F4                        loop reverseLoop              
    29                                  
    30                                      ;nill-terminate reversedStr
    31 00000027 C60730                      mov byte [rdi], '0'              
    32                                                 
    33                                  
    34                                  ;print the reversed string
    35 0000002A B804000000                  mov rax, 4           
    36 0000002F BB01000000                  mov rbx, 1            
    37 00000034 48B9-                       mov rcx, reversedStr     ; address of the largest digit string
    37 00000036 [0000000000000000] 
    38 0000003E BA05000000                  mov rdx, strLength          ; length of the largest digit
    39 00000043 CD80                        int 0x80              ; call kernel
    40                                  
    41                                  ;exit
    42 00000045 B801000000                  mov rax, 1            ; sys_exit
    43 0000004A 4831DB                      xor rbx, rbx          ; exit code 0
    44 0000004D CD80                        int 0x80              ; call kernel
    45                                  
